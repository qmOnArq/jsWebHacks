{"version":3,"file":"jira.js","mappings":"yFAAA,cACA,UAEA,qBAEI,IAAMA,EAAuBC,SAASC,cAAc,oBACpD,GAAKF,IAAwBA,EAAqBE,cAAc,uBAAhE,CAKA,IAAMC,EAAuCF,SAASC,cAAc,gBAC9DE,EAA0CH,SAASC,cAAc,8BAEvE,GAAyB,OAArBC,GAAiD,OAApBC,EAAjC,CAIA,IAAMC,EAAYF,EAAiBG,UAC7BC,EAAWH,EAAgBI,QAC3BC,EAAgB,UAAGF,EAAQ,aAAI,aAAQF,EAAW,CAAEK,mBAAmB,EAAMC,UAAU,KAEvFC,EAAa,SAACC,EAAuDC,GACvEd,EAAqBe,mBACjB,YACA,0DAEUF,EAAQG,GAAK,cAAOH,EAAQG,GAAE,KAAM,GAAE,iCACtCH,EAAQI,KAAO,gBAASJ,EAAQI,KAAI,KAAM,GAAE,iCAC5CJ,EAAQI,KAAO,kBAAoB,GAAE,0FAECJ,EAAQK,KAAI,4CAK5DL,EAAQG,IAAqB,KAAfH,EAAQG,IAAaF,GACnCb,SAASkB,eAAeN,EAAQG,IAAKI,iBAAiB,SAAS,WAAM,OAAAN,GAAA,GAE7E,EAGAF,EACI,CACII,GAAI,mBACJE,KAAM,qBAEV,WAAM,oBAAST,EAAT,IAIVG,EAAW,CACPM,KAAM,0BACND,KAAM,6EAAsER,KAIhF,IAAMY,EAAiBC,UAAUC,SAASC,cAAcC,SAAS,OAAS,IAAM,MAChFb,EACI,CACIM,KAAM,iCACNF,GAAI,0BAER,WACI,IAAMU,EAAeC,KAAKC,SACrBC,SAAS,IACTC,UAAU,GACTC,EAAY,UAAGtB,EAAa,YAAIiB,GAChCM,EAAU,mBAAYX,EAAc,4BAAoBU,EAAS,YAAIV,EAAc,4BAAoBZ,GAAa,OAAGY,EAAc,qCAA6BU,EAAS,aAAKV,EAAc,iCACpM,aAASW,EACb,G,EAER,C,gECxEA,mBAAiCd,GAC7BI,UAAUW,UAAUC,UAAUhB,GAAMiB,MACxC,C,gECFA,mBAAgCC,EAAaC,GACzC,OAAOD,EACFE,OACAC,QAAQ,kBAAmB,SAC3BA,QAAQ,SAAS,SAAAC,GAAK,OAACH,aAAO,EAAPA,EAAS3B,mBAAoB,GAAK8B,CAAnC,IACtBD,QAAQ,OAAO,SAAAC,GAAK,MAAC,QAAQC,KAAKD,GAAKA,EAAI,GAAvB,IACpBD,QAAQ,WAAY,IACpBA,QAAQ,UAAU,SAAAC,GAAK,OAACH,aAAO,EAAPA,EAAS1B,UAAW,IAAM6B,CAA3B,IACvBhB,aACT,C,kECTA,aAEIkB,EAAa,GAEjB,SAASC,IACAC,OAAOC,MAQZC,QAAQC,IAAI,wBACZ,kBARIL,EACiB,GACbM,YAAW,WAAM,OAAAL,GAAA,GAAS,GAOtC,CAEAA,E,GChBIM,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,OACf,CCtBA,O","sources":["webpack://jswebhacks/./src/jira/functions/add-branch-links.ts","webpack://jswebhacks/./src/jira/helpers/copy-text-to-clipboard.function.ts","webpack://jswebhacks/./src/jira/helpers/dashify.ts","webpack://jswebhacks/./src/jira/jira.ts","webpack://jswebhacks/webpack/bootstrap","webpack://jswebhacks/./src/jira/index.ts"],"sourcesContent":["import dashify from '../helpers/dashify';\nimport copyText from '../helpers/copy-text-to-clipboard.function';\n\nexport default function addBranchLinks() {\n    // Get target element\n    const callToActionsElement = document.querySelector('.call-to-actions');\n    if (!callToActionsElement || callToActionsElement.querySelector('.create-branch-link')) {\n        return;\n    }\n\n    // Get branch name\n    const issueNameElement: HTMLElement | null = document.querySelector('#summary-val');\n    const issueKeyElement: HTMLMetaElement | null = document.querySelector('meta[name=\"ajs-issue-key\"]');\n\n    if (issueNameElement === null || issueKeyElement === null) {\n        return;\n    }\n\n    const issueName = issueNameElement.innerText;\n    const issueKey = issueKeyElement.content;\n    const newBranchName = `${issueKey}-${dashify(issueName, { replaceApostrophe: true, condense: true })}`;\n\n    const createLink = (element: { text: string; id?: string; href?: string }, onClick?: Function) => {\n        callToActionsElement.insertAdjacentHTML(\n            'beforeend',\n            `<br />\n                <a\n                    ${element.id ? `id=\"${element.id}\"` : ''}\n                    ${element.href ? `href=\"${element.href}\"` : ''}\n                    ${element.href ? `target=\"_blank\"` : ''}\n                >\n                    <span class=\"devstatus-cta-link-text\">${element.text}</span>\n                </a>\n        `,\n        );\n\n        if (element.id && element.id !== '' && onClick) {\n            document.getElementById(element.id)!.addEventListener('click', () => onClick());\n        }\n    };\n\n    // Copy branch name\n    createLink(\n        {\n            id: 'copy-branch-name',\n            text: 'Copy branch name',\n        },\n        () => copyText(newBranchName),\n    );\n\n    // Create branch in Gitlab\n    createLink({\n        text: 'Create branch in Gitlab',\n        href: `https://gitlab.exponea.com/app/frontend/-/branches/new?branch_name=${newBranchName}`,\n    });\n\n    // Copy create branch command\n    const commandConnect = navigator.platform.toLowerCase().includes('win') ? ';' : ' &&';\n    createLink(\n        {\n            text: 'Copy create branch git command',\n            id: 'create-branch-command',\n        },\n        () => {\n            const randomString = Math.random()\n                .toString(36)\n                .substring(2);\n            const stashName = `${newBranchName}-${randomString}`;\n            const command = `git fetch${commandConnect} git stash save \"${stashName}\"${commandConnect} git checkout -b ${newBranchName}${commandConnect} git stash apply \"stash^{/${stashName}}\"${commandConnect} git branch --unset-upstream`;\n            copyText(command);\n        },\n    );\n}\n","export default function copyText(text: string) {\n    navigator.clipboard.writeText(text).then();\n}\n","export default function dashify(str: string, options?: DashifyOptions) {\n    return str\n        .trim()\n        .replace(/([a-z])([A-Z])/g, '$1-$2')\n        .replace(/['’]/g, m => (options?.replaceApostrophe ? '' : m))\n        .replace(/\\W/g, m => (/[À-ž]/.test(m) ? m : '-'))\n        .replace(/^-+|-+$/g, '')\n        .replace(/-{2,}/g, m => (options?.condense ? '-' : m))\n        .toLowerCase();\n}\n\nexport interface DashifyOptions {\n    condense?: boolean;\n    replaceApostrophe?: boolean;\n}\n","import addBranchLinks from './functions/add-branch-links';\n\nlet startFails = 0;\n\nfunction start() {\n    if (!window.jira) {\n        startFails++;\n        if (startFails < 5) {\n            setTimeout(() => start(), 50);\n        }\n        return;\n    }\n\n    console.log('JIRA plugin started');\n    addBranchLinks();\n}\n\nstart();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import './jira';\n"],"names":["callToActionsElement","document","querySelector","issueNameElement","issueKeyElement","issueName","innerText","issueKey","content","newBranchName","replaceApostrophe","condense","createLink","element","onClick","insertAdjacentHTML","id","href","text","getElementById","addEventListener","commandConnect","navigator","platform","toLowerCase","includes","randomString","Math","random","toString","substring","stashName","command","clipboard","writeText","then","str","options","trim","replace","m","test","startFails","start","window","jira","console","log","setTimeout","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__"],"sourceRoot":""}